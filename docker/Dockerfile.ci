#docker pull pivotalgreenhouse/ci
FROM ruby:3.2

ARG VCENTER_CA_CERT

ENV YQ_VERSION=2.3.0
ENV YQ_CHECKSUM=TODO
ENV YQ_BIN_PATH=/usr/local/bin/yq
ENV METALINK_VERSION=0.5.0
ENV METALINK_CHECKSUM=9f3ff22e1ac3a8b4a667a9505dce2a224e099475ab69a02b23813ad073e27e01
ENV METALINK_BIN_PATH=/usr/local/bin/meta4

ENV DEBIAN_FRONTEND=noninteractive

COPY --from=bosh/golang-release /var/vcap/packages/golang-1-linux /usr/local/go
ENV GOROOT=/usr/local/go PATH=/usr/local/go/bin:$PATH

RUN apt-get update \
    && apt-get install -y --no-install-recommends \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg \
        software-properties-common \
        sudo \
    && echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] https://packages.cloud.google.com/apt cloud-sdk main" > /etc/apt/sources.list.d/google-cloud.list \
    && curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key --keyring /usr/share/keyrings/cloud.google.gpg add - \
    && curl -fsSL https://apt.releases.hashicorp.com/gpg | apt-key add - \
    && apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main" \
    && apt-get update  \
    && apt-get install -y --no-install-recommends \
        apt-utils \
        awscli \
        build-essential \
        ca-certificates \
        cmake \
        curl \
        freerdp2-x11 \
        g++ \
        gawk \
        gcc \
        git \
        google-cloud-cli \
        jq \
        libc6-dev \
        libncursesw5 \
        libpopt-dev \
        lsb-release \
        make \
        mingw-w64 \
        nano \
        netcat-openbsd \
        packer \
        pkg-config \
        python3-all \
        python3-dev \
        python3-pip \
        python3-setuptools \
        rlwrap \
        rsync \
        sudo \
        unzip \
        vim \
        wget \
        zip

RUN LSB_RELEASE=jammy \
    && echo "Using 'jammy' because Azure doesn't yet support 'noble'" \
    && ARCH=$(dpkg --print-architecture) \
    && mkdir -p /etc/apt/keyrings \
    && curl -sLS https://packages.microsoft.com/keys/microsoft.asc \
      | gpg --dearmor > /etc/apt/keyrings/microsoft.gpg \
    && chmod go+r /etc/apt/keyrings/microsoft.gpg \
    && echo "deb [arch=${ARCH} signed-by=/etc/apt/keyrings/microsoft.gpg] https://packages.microsoft.com/repos/azure-cli/ ${LSB_RELEASE} main" \
      > /etc/apt/sources.list.d/azure-cli.list \
    && apt-get update \
    && apt-get install -y \
     azure-cli

#install CF CLI
RUN curl -sL https://packages.cloudfoundry.org/debian/cli.cloudfoundry.org.key | apt-key add - \
    && echo "deb https://packages.cloudfoundry.org/debian stable main" | tee /etc/apt/sources.list.d/cloudfoundry-cli.list \
    && apt-get update \
    && apt-get install cf-cli

RUN curl -sL "https://github.com/dpb587/metalink/releases/download/v${METALINK_VERSION}/meta4-${METALINK_VERSION}-linux-amd64"  \
      > "${METALINK_BIN_PATH}" \
    && echo "${METALINK_CHECKSUM} ${METALINK_BIN_PATH}" \
      | sha256sum -c - \
    && chmod +x "${METALINK_BIN_PATH}"

RUN curl -sL https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64 \
      > "${YQ_BIN_PATH}" \
    && chmod +x "${YQ_BIN_PATH}"

# bosh Golang CLI
RUN curl -sL $(curl -s https://api.github.com/repos/cloudfoundry/bosh-cli/releases/latest | jq -r '.assets[] | select(.name | contains ("linux-amd64")) | .browser_download_url') \
      > /usr/local/bin/bosh  \
    && chmod 755 /usr/local/bin/bosh

RUN gem install bundler \
    && gem install aws-sdk \
    && gem install azure_mgmt_resources

RUN git clone https://github.com/portcullislabs/rdp-sec-check \
    && mv rdp-sec-check/rdp-sec-check.pl /usr/local/bin \
    && rm -rf rdp-sec-check \
    && export PERL_MM_USE_DEFAULT=1 \
    && cpan Encoding::BER

RUN packer plugins install github.com/hashicorp/amazon \
    && packer plugins install github.com/hashicorp/azure \
    && packer plugins install github.com/hashicorp/googlecompute \
    && packer plugins install github.com/hashicorp/vsphere
