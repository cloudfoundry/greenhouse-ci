#!/bin/bash
set -eu -o pipefail
set -x

PRIVATE_YML='---
blobstore:
  provider: s3
  options:
    credentials_source: env_or_profile'
echo "$PRIVATE_YML" > release/config/private.yml

FINAL_RELEASE_VERSION=$(cat version/number)

pushd release
  RELEASE_YML=$PWD/releases/${RELEASE_NAME}/${RELEASE_NAME}-${FINAL_RELEASE_VERSION}.yml
  RELEASE_TGZ=$PWD/releases/${RELEASE_NAME}/${RELEASE_NAME}-${FINAL_RELEASE_VERSION}.tgz

  #idempotently create tarball in case later parts of shipit fail
  if [ -e "${RELEASE_YML}" ]; then
    echo "----- Release already created; making tarball..."
    bosh --sha2 -n create-release --tarball=${RELEASE_TGZ} ${RELEASE_YML}
  else
    echo "----- Set git identity"
    git config user.email "cf-netgarden-eng@pivotal.io"
    git config user.name "CI (Automated)"

    echo "----- Create final release"
    bosh --sha2 -n create-release --tarball=$RELEASE_TGZ --version $FINAL_RELEASE_VERSION --final

    echo "----- Update master and develop branches on origin"
    git add -A

    commit_message="Create final release ${FINAL_RELEASE_VERSION}"
    if [[ -n "${CI_SKIP:-}" ]]; then
      commit_message="$commit_message"
    fi

    git commit -m "$(echo -e $commit_message)"

    echo "----- DEBUG: show the commit we just created"
    git --no-pager show HEAD
  fi

  # make tarball easier to reach by upstream things
  mv $RELEASE_TGZ ../finalized-release/${RELEASE_NAME}-$FINAL_RELEASE_VERSION.tgz
popd

cp -a release finalized-release/
rsync -a release/ finalized-repo
